function Get-ADSIADGroupMembers
{
<#
.SYNOPSIS
  Get the usernames and sam account names of the members of a given group name
.PARAMETER Name
  Name of the AD Group
.NOTES
  Author: Clint Fritz
  TODO: Fix user lookup to lookup via LDAP Name. As multiple users with the same name
        get caught up and mashed together.
#>
[CmdletBinding()]
Param(
    [Parameter(Mandatory,
    ValueFromPipeline,
    ValueFromPipelineByPropertyName,
    Position=0)]
    [string[]]$Name
)

    Begin
    {
        Write-Verbose "$(Get-Date) Group Names: $($Name)"
    }

    Process
    {
        foreach ($groupName in $name) 
        {
            Write-Verbose "$(Get-Date) Group Name: $($groupName)"
            $groupList = Get-ADSIADGroup -Name $groupName

            if ($groupList)
            {
                #in case there are multiple groups found?
                foreach($group in $groupList)
                {
                    Write-Verbose "$(Get-Date) Found group: $($group.samaccountname)"
                    foreach ($user in ($group).member | sort)
                    {
                        Write-Verbose "$(Get-Date) Found user: $($user)"
                        #have to get just the username to be able to look them up.
                        $userName = $user.substring(3,$user.IndexOf(",")-3)
                        $logonId = (Get-ADSIADuser -name $userName).samaccountname

                        $hash = [ordered] @{}
                        $hash.Group = $($group.samaccountname)
                        $hash.Name = $($userName)
                        $hash.SamAccountName = $logonId
                        $object = New-Object PSObject -Property $hash
                        $object

                    }#end foreach user
                }#end foreach group
            } else {
                Write-Output "No Group Found with the name: $($groupName)"
            }
        }
    }

    End
    {
        Write-Verbose "$(Get-Date) End"
    }

}
